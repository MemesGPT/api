name: memes_gpt_CI

on: [pull_request]

env:
    CR_REGISTRY: "${{ secrets.CR_REGISTRY }}"
    CR_REPO: "${{ secrets.CR_REPO }}"
    IMAGE_TAG: "${{ github.sha }}"
    YC_PATH: "/home/${{ secrets.MEMES_HOST_USER }}/yandex-cloud/bin"
    NETWORK: "memes_gpt_net"


jobs:
  build_and_push_to_yc-cr:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Login to Yandex Cloud Container Registry
        id: login-cr
        uses: yc-actions/yc-cr-login@v0.1-alpha
        with:
          yc-sa-json-credentials: ${{ secrets.YC_SA_JSON_CREDENTIALS }}

      - name: Add SHORT_SHA
        run: |
          echo "SHORT_SHA=`echo ${IMAGE_TAG} | cut -c1-8`" >> $GITHUB_ENV

      - name: Build, tag, and push image to Yandex Cloud Container Registry
        run: |
          docker build -t cr.yandex/$CR_REGISTRY/$CR_REPO:${SHORT_SHA} ./backend
          docker push cr.yandex/$CR_REGISTRY/$CR_REPO:${SHORT_SHA}

  deploy:
    runs-on: ubuntu-latest
    needs: build_and_push_to_yc-cr
    steps:
      - name: Add SHORT_SHA
        run: |
          echo "SHORT_SHA=`echo ${IMAGE_TAG} | cut -c1-8`" >> $GITHUB_ENV

      - name: executing remote ssh commands to deploy
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.MEMES_HOST }}
          username: ${{ secrets.MEMES_HOST_USER }}
          key: ${{ secrets.MEMES_SSH_KEY }}
          script_stop: true
          envs: CR_REGISTRY, CR_REPO, SHORT_SHA, YC_PATH, NETWORK
          script: |
            export PATH=$PATH:$YC_PATH
            docker pull cr.yandex/$CR_REGISTRY/$CR_REPO:$SHORT_SHA
            docker stop $CR_REPO || true
            docker rm $CR_REPO || true
            docker images -a | grep $CR_REPO | grep -v $SHORT_SHA | awk '{print $3}' | xargs docker rmi || true
            docker run --detach --network $NETWORK --restart always \
              --env SERVER_HOST='0.0.0.0' \
              --env SERVER_PORT='8081' \
              -p 8081:8081 \
              --name $CR_REPO \
              cr.yandex/$CR_REGISTRY/$CR_REPO:$SHORT_SHA

  send_message:
    runs-on: ubuntu-latest
    needs: deploy
    steps:
      - name: send telegram message on push
        uses: appleboy/telegram-action@master
        with:
          to: ${{ secrets.TELEGRAM_TO }}
          token: ${{ secrets.TELEGRAM_TOKEN }}
